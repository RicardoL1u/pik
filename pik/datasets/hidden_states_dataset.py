import pandas as pd
import numpy as np
import torch
from torch.utils.data import Dataset
from typing import List, Optional, Union
import json
import logging
class HiddenStatesDataset(Dataset):
    '''
    Loads the hidden states dataset and text generations from files generated by `generate.py`.
    '''
    def __init__(self,
        hs_file='hidden_states.pt',
        tg_file='text_generations.csv',
        precision=torch.float16,
        last_layer_only=True,
        device='cuda',
    ):
        hs = torch.load(hs_file, map_location=device).type(precision)
        assert hs.dim() in (2, 3)
        if not last_layer_only and hs.dim() == 3:
            hs = hs.reshape(hs.shape[0], hs.shape[1] * hs.shape[2])
        elif last_layer_only and hs.dim() == 3:
            hs = hs[:, -1, :]
        self.hidden_states = hs
        self.text_generations: list = json.load(open(tg_file, 'r'))

        self.pik_labels = np.array([sample['evaluation'] for sample in self.text_generations])
        # unit_labels 
        self.unit_labels = []
        for sample in self.text_generations:
            self.unit_labels.extend(sample['unit_evaluation'])
        # convert the true false list to np array with 1 and 0
        self.unit_labels = np.array(self.unit_labels).astype(int)    
        
        
        # ensure the len of unit_labels would be the multiple of len of hidden_states
        logging.info(f'len of unit_labels: {len(self.unit_labels)}')
        logging.info(f'len of hidden_states: {len(self.hidden_states)}')
        assert len(self.unit_labels) % len(self.hidden_states) == 0, 'len of unit_labels is not the multiple of len of hidden_states'
        
        self.per_unit_labels = len(self.unit_labels) // len(self.hidden_states)
        
    def __len__(self):
        return len(self.unit_labels)

    def __getitem__(self, i):
        hid = i // self.per_unit_labels
        return (
            self.hidden_states[hid],
            self.unit_labels[i],
        )
  
    def get_pik_label(self, hid):
        return self.pik_labels[hid]